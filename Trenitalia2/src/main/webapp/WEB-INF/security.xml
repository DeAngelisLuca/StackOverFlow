<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<global-method-security pre-post-annotations="enabled"/>

	<http use-expressions="true">
		<intercept-url pattern="/user**" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/users/**" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/dipendente**" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/dipendenti**" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/dipendenti/**" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/account**" access="hasRole('ROLE_USER')"/>
		<form-login login-page="/login"/>
		<logout logout-url="/logout"/>
	</http>
	
	<authentication-manager>
		<authentication-provider>
			
			<password-encoder hash="bcrypt"/>
			
			<jdbc-user-service data-source-ref="dataSource"
				authorities-by-username-query="select app_user.nome, ruolo.nome from app_user
											   join app_user_ruolo on app_user.id = app_user_ruolo.utenti_id
											   join ruolo on app_user_ruolo.ruoli_id = ruolo.id
											   where app_user.nome = ?"
				users-by-username-query="select nome,password,enabled from app_user where nome = ?" />
			
		</authentication-provider>
</authentication-manager>

</beans:beans>
